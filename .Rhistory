)
gsdmm_gibbs(
d = d[1:4],
I = 100,
K = 30,
alpha = 0.1,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:4],
I = 100,
K = 30,
alpha = 0.1,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:4],
I = 100,
K = 30,
alpha = 0.1,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:4],
I = 100,
K = 30,
alpha = 0.1,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:4],
I = 100,
K = 30,
alpha = 0.1,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:4],
I = 100,
K = 30,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:4],
I = 100,
K = 30,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:4],
I = 5,
K = 30,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:4],
I = 5,
K = 30,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:4],
I = 5,
K = 30,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:4],
I = 5,
K = 30,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:4],
I = 5,
K = 30,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:4],
I = 5,
K = 30,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:4],
I = 5,
K = 30,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:4],
I = 5,
K = 10,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:4],
I = 5,
K = 10,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:4],
I = 5,
K = 10,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:4],
I = 5,
K = 10,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:4],
I = 4,
K = 10,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:4],
I = 4,
K = 10,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:4],
I = 4,
K = 10,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:4],
I = 4,
K = 10,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:4],
I = 4,
K = 10,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:4],
I = 4,
K = 10,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:4],
I = 4,
K = 10,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:4],
I = 4,
K = 10,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:4],
I = 4,
K = 10,
alpha = 0.2,
beta = 0.2,
V = V
)
text <- list(c("cat","loves","toys"), c("cat","hunts","mice"), c("green","dog","sleeps"),c("dog","is","hungry"),c("giraffe"))
text
vocab <- unique(unlist(texts)) # vocabulary
vocab <- stats::setNames(1:length(vocab), vocab) # add integer indices to vocabulary
V <- length(vocab) # num words in vocabulary
d <- lapply(texts, function(i) match(i, names(vocab))) # turn texts into sequences of integers
d <- lapply(d, function(i) i - 1) # index from 0
gsdmm_gibbs(
d = d[1:5],
I = 5,
K = 10,
alpha = 0.2,
beta = 0.2,
V = V
)
View(texts)
View(text)
texts <- text
vocab <- unique(unlist(texts)) # vocabulary
vocab <- stats::setNames(1:length(vocab), vocab) # add integer indices to vocabulary
V <- length(vocab) # num words in vocabulary
d <- lapply(texts, function(i) match(i, names(vocab))) # turn texts into sequences of integers
d <- lapply(d, function(i) i - 1) # index from 0
gsdmm_gibbs(
d = d[1:5],
I = 5,
K = 10,
alpha = 0.2,
beta = 0.2,
V = V
)
View(texts)
View(d)
gsdmm_gibbs(
d = d[1:5],
I = 5,
K = 10,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:5],
I = 5,
K = 10,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:5],
I = 5,
K = 10,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:5],
I = 5,
K = 10,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:5],
I = 100,
K = 30,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:5],
I = 100,
K = 30,
alpha = 0.2,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:5],
I = 100,
K = 30,
alpha = 0.01,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:5],
I = 100,
K = 30,
alpha = 0.01,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:5],
I = 100,
K = 30,
alpha = 0.01,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:5],
I = 100,
K = 30,
alpha = 0.01,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:5],
I = 100,
K = 30,
alpha = 0.01,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:5],
I = 100,
K = 30,
alpha = 0.01,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:5],
I = 100,
K = 30,
alpha = 0.01,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:5],
I = 100,
K = 30,
alpha = 0.01,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:5],
I = 100,
K = 30,
alpha = 0.01,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:5],
I = 100,
K = 30,
alpha = 0.01,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:5],
I = 100,
K = 30,
alpha = 0.01,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:5],
I = 100,
K = 30,
alpha = 0.01,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:5],
I = 100,
K = 30,
alpha = 0.01,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:5],
I = 100,
K = 30,
alpha = 0.01,
beta = 0.2,
V = V
)
gsdmm_gibbs(
d = d[1:5],
I = 100,
K = 30,
alpha = 0.01,
beta = 0.1,
V = V
)
gsdmm_gibbs(
d = d[1:5],
I = 100,
K = 30,
alpha = 0.01,
beta = 0.1,
V = V
)
gsdmm_gibbs(
d = d[1:5],
I = 100,
K = 30,
alpha = 0.01,
beta = 0.1,
V = V
)
gsdmm_gibbs(
d = d[1:5],
I = 100,
K = 30,
alpha = 0.01,
beta = 0.1,
V = V
)
Rcpp::cppFunction('std::vector<std::vector<int>> test(std::vector<std::vector<int>> x){
x[0][1]++;
return x;
}')
test(list(c(0,0),c(0,0)))
Rcpp::cppFunction('std::vector<std::vector<int>> test(std::vector<std::vector<int>> x){
x[0][1] += 1;
return x;
}')
test(list(c(0,0),c(0,0)))
Rcpp::cppFunction('std::vector<std::vector<int>> test(std::vector<std::vector<int>> x){
x[0][1]--;
return x;
}')
test(list(c(0,0),c(0,0)))
devtools::document()
update.packages("xfun")
devtools::document()
install.packages("xfun")
# we lemmatize and tokenize creating a list of character vector representing each text
text <- c(
"Rockets are amazing.",
"Witnessing a rocket in flight is a marvel of engineering.",
"We should take a rocket to Mars.",
"Rocket",
"Have you ever seen a cat?",
"Cats are fun.",
"Your cat seems sweet.",
"Cat"
) |>
tolower()  |>
gsub(pattern = '[[:punct:] ]+', replacement = ' ') |>
textstem::lemmatize_strings() |>
text2vec::word_tokenizer() |>
lapply(function(i) i[!i %in% stopwords::stopwords()])
gsdmm::gsdmm(texts = text, n_iter = 100, n_clust = 20, alpha = 0.1, beta = 0.2)
# we lemmatize and tokenize creating a list of character vector representing each text
text <- c(
"Rockets are amazing.",
"Witnessing a rocket in flight is a marvel of engineering.",
"We should take a rocket to Mars.",
"Rocket",
"Have you ever seen a cat?",
"Cats are fun.",
"Your cat seems sweet.",
"Cat"
) |>
tolower()  |>
gsub(pattern = '[[:punct:] ]+', replacement = ' ') |>
textstem::lemmatize_strings() |>
text2vec::word_tokenizer() |>
lapply(function(i) i[!i %in% stopwords::stopwords()])
gsdmm::gsdmm(texts = text, n_iter = 100, n_clust = 20, alpha = 0.1, beta = 0.2)
# we lemmatize and tokenize creating a list of character vector representing each text
text <- c(
"Rockets are amazing.",
"Witnessing a rocket in flight is a marvel of engineering.",
"We should take a rocket to Mars.",
"Rocket",
"Have you ever seen a cat?",
"Cats are fun.",
"Your cat seems sweet.",
"Cat"
) |>
tolower()  |>
gsub(pattern = '[[:punct:] ]+', replacement = ' ') |>
textstem::lemmatize_strings() |>
text2vec::word_tokenizer() |>
lapply(function(i) i[!i %in% stopwords::stopwords()])
gsdmm::gsdmm(texts = text, n_iter = 100, n_clust = 20, alpha = 0.1, beta = 0.2)
